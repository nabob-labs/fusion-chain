[workspace]

resolver = "2"

exclude = ["tools/proto-compiler"]

# Also remember to add to deployments/scripts/rust-docs
members = [
    "crates/cnidarium-component",
    "crates/crypto/decaf377-fmd",
    "crates/proto",
    "crates/crypto/decaf377-frost",
    "crates/crypto/decaf377-ka",
    "crates/crypto/eddy",
    "crates/crypto/proof-params",
    "crates/crypto/tct",
    "crates/util/auto-https",
    "crates/util/cometindex",
    "crates/util/tower-trace",
    "crates/core/txhash",
    "crates/core/num",
    "crates/core/asset",
    "crates/core/keys",
    "crates/core/component/sct",
    "crates/core/component/ibc",
    "crates/core/component/shielded-pool",
    "crates/core/component/fee",
    "crates/core/component/distributions",
    "crates/core/component/stake",
    "crates/core/component/governance",
    "crates/core/component/community-pool",
    "crates/core/component/funding",
    "crates/core/component/dex",
    "crates/core/component/auction",
    "crates/core/component/compact-block",
    "crates/crypto/proof-setup",
    "crates/transaction",
    "crates/core/app",
    "crates/custody",
    "crates/view",
    "crates/wallet",
    "crates/util/tendermint-proxy",
    "crates/bin/fcli",
    "crates/bin/fvsd",
    #"crates/bin/fnsd",
    "crates/bin/findexer",
    "crates/bin/fmonitor",
    "tools/parameter-setup",
    "tools/summonerd",
]

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.13.3"
# CI backends to support
ci = ["github"]
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu"]
# The installers to generate for each app
installers = ["shell"]
# Publish jobs to run in CI
pr-run-mode = "skip"
# Skip checking whether the specified configuration files are up to date
allow-dirty = ["ci"]
# Whether to install an updater program
install-updater = false

[workspace.metadata.dist.github-custom-runners]
aarch64-apple-darwin = "macos-13-large"
x86_64-apple-darwin = "macos-13-large"
x86_64-unknown-linux-gnu = "buildjet-32vcpu-ubuntu-2204"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"

# config for 'cargo release'
[workspace.metadata.release]
# Instruct cargo-release to increment versions for all packages in the workspace in lockstep.
shared-version = true
# Format spec for the auto-generated git tag, based on new version for release.
tag-name = "v{{version}}"
# The message is required for an annotated tag to be created.
tag-message                = "FusionChain version {{version}}"
pre-release-commit-message = "chore: release version {{version}}"
# Permit publishing to crates.io; local developers should run `cargo release --no-publish`
# to prepare the git info, then pushing to remote with tag will trigger crates.io publication.
publish = true
# Do commit, tag, and push the version bump, triggering a new release.
tag = true
# Don't push, since we're still evaluating the new release workflow.
push = false
# Edit each crate's Cargo.toml, bumping versions for other workspace crates.
dependent-version = "upgrade"
# Increase default ratelimit on publishing packages
rate-limit = { existing-packages = 50 }
# Permit publishing from any branch, because in GHA CI context, HEAD is checked out.
allow-branch = ["*"]

[workspace.package]
authors    = ["Nabob Labs <team@naboblabs.xyz"]
edition    = "2021"
version    = "1.2.0"
repository = "https://github.com/nabob-labs/fusion-chain"
homepage   = "https://fusion.swap"
license    = "Apache-2.0"

[workspace.dependencies]
cnidarium-component = { path = "crates/cnidarium-component", default-features = false }
decaf377-fmd = { path = "crates/crypto/decaf377-fmd" }
fusion-proto = { path = "crates/proto", default-features = false }
decaf377-frost = { path = "crates/crypto/decaf377-frost" }
decaf377-ka = { path = "crates/crypto/decaf377-ka" }
fusion-eddy = { path = "crates/crypto/eddy" }
fusion-proof-params = { path = "crates/crypto/proof-params", default-features = false }
fusion-tct = { path = "crates/crypto/tct", default-features = false }
fusion-https = { path = "crates/util/auto-https" }
cometindex = { path = "crates/util/cometindex" }
fusion-tower-trace = { path = "crates/util/tower-trace" }
fusion-txhash = { path = "crates/core/txhash", default-features = false }
fusion-num = { path = "crates/core/num", default-features = false }
fusion-asset = { path = "crates/core/asset", default-features = false }
fusion-keys = { path = "crates/core/keys", default-features = false }
fusion-sct = { path = "crates/core/component/sct", default-features = false }
fusion-ibc = { path = "crates/core/component/ibc", default-features = false }
fusion-shielded-pool = { path = "crates/core/component/shielded-pool", default-features = false }
fusion-fee = { path = "crates/core/component/fee", default-features = false }
fusion-distributions = { path = "crates/core/component/distributions", default-features = false }
fusion-stake = { path = "crates/core/component/stake", default-features = false }
fusion-governance = { path = "crates/core/component/governance", default-features = false }
fusion-community-pool = { path = "crates/core/component/community-pool", default-features = false }
fusion-funding = { path = "crates/core/component/funding", default-features = false }
fusion-dex = { path = "crates/core/component/dex", default-features = false }
fusion-auction = { path = "crates/core/component/auction", default-features = false }
fusion-compact-block = { path = "crates/core/component/compact-block", default-features = false }
fusion-proof-setup = { path = "crates/crypto/proof-setup" }
fusion-transaction = { path = "crates/transaction", default-features = false }
fusion-app = { path = "crates/core/app", default-features = false }
fusion-custody = { path = "crates/custody" }
fusion-view = { path = "crates/view" }
fusion-wallet = { path = "crates/wallet" }
fusion-tendermint-proxy = { path = "crates/util/tendermint-proxy" }

anyhow = { version = "1.0.75" }
ark-ec = { default-features = false, version = "0.4.2" }
ark-ff = { default-features = false, version = "0.4.2" }
ark-groth16 = { default-features = false, version = "0.4.0" }
ark-r1cs-std = { default-features = false, version = "0.4.0" }
ark-relations = { version = "0.4" }
ark-serialize = { version = "0.4.2" }
ark-snark = { version = "0.4.0" }
ark-std  = { default-features = false, version = "0.4" }
assert_cmd = { version = "2.0" }
async-stream = { version = "0.3.5" }
async-trait = { version = "0.1.52" }
axum = { version = "0.7.9" }
axum-extra = { version = "0.9.6" }
axum-server = { version = "0.7.1" }
base64 = { version = "0.21.2" }
bech32 = { version = "0.8.1" }
bincode = { version = "1.3.3" }
bitvec = { version = "1" }
blake2b_simd = { version = "1" }
bytes = { version = "1.2" }
camino = { version = "1" }
chacha20poly1305 = { version = "0.9.0" }
chrono = { default-features = false, version = "0.4" }
clap = { version = "3.2" }
cnidarium = { version = "0.83", default-features = false}
criterion = { version = "0.4" }
decaf377 = { default-features = false, version = "0.10.1" }
decaf377-rdsa = { version = "0.11.0" }
derivative = { version = "2.2" }
directories = { version = "4.0.1" }
ed25519-consensus = { version = "2.1" }
ethnum = { version = "1.3" }
futures = { version = "0.3.28" }
hex = { version = "0.4.3" }
http = { version = "1.2.0" }
http-body = { version = "1.0.1" }
http-body-util = { version = "0.1.2" }
humantime = { version = "2.1" }
ibc-proto = { default-features = false, version = "0.51.1" }
ibc-types = { default-features = false, version = "0.15.0" }
ibig = { version = "0.3" }
ics23 = { version = "0.12.0" }
im = { version = "^15.1.0" }
indicatif = { version = "0.16" }
jmt = { version = "0.11", features = ["migration"] }
metrics = { version = "0.24.1" }
metrics-exporter-prometheus = { version = "0.16", features = ["http-listener"] }
metrics-tracing-context = { version = "0.17.0" }
num-bigint = { version = "0.4" }
num-traits = { default-features = false, version = "0.2.15" }
once_cell = { version = "1.8" }
parking_lot = { version = "0.12.1" }
pbjson = { version = "0.7.0" }
pbjson-types = { version = "0.7.0" }
pin-project = { version = "1.0.12" }
pin-project-lite = { version = "0.2.9" }
poseidon377 = { version = "1.2.0" }
proptest = { version = "1.6" }
proptest-derive = { version = "0.5.1" }
prost = { version = "0.13.4" }
prost-types = { version = "0.13.4" }
r2d2 = { version = "0.8" }
r2d2_sqlite = { version = "0.25" }
rand = { version = "0.8.5" }
rand_chacha = { version = "0.3.1" }
rand_core = { version = "0.6.4" }
regex = { version = "1.8.1" }
rocksdb = { version = "0.21.0" }
rstest = { version = "0.24.0" }
rustls = { version = "0.23.21" }
serde = { version = "1.0.186" }
serde_json = { version = "1.0.96" }
serde_unit_struct = { version = "0.1" }
serde_with = { version = "3.5.1" }
sha2 = { version = "0.10" }
sqlx = { version = "0.8", features = ["bigdecimal", "postgres", "runtime-tokio", "tls-rustls"] }
tap = "1.0.1"
tempfile = { version = "3.3.0" }
tendermint = { default-features = false, version = "0.40.1" }
tendermint-config= { version = "0.40.1" }
tendermint-light-client-verifier = { version = "0.40.1" }
tendermint-proto = { version = "0.40.1" }
tendermint-rpc = { version = "0.40.1" }
termion = { version = "3" }
thiserror = { version = "1.0" }
time = { version = "0.3" }
tokio = { version = "1.39.0" }
tokio-stream = { version = "0.1.8" }
tokio-util = { version = "0.7" }
toml = { version = "0.7" }
tonic = { version = "0.12.3" }
tonic-reflection = { version = "0.12.3" }
tonic-web = { version = "0.12.3" }
tower = { version = "0.4.0" }
tower-http = { version = "0.6.2" }
tower-service = { version = "0.3.2" }
tracing = { version = "0.1" }
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
url = { version = "2.2" }
getrandom = { version = "0.2", default-features = false }
